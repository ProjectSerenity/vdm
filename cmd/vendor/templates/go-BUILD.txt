# Code generated by vendeps. DO NOT EDIT.

# Copyright 2023 The Firefly Authors.
#
# Use of this source code is governed by a BSD 3-clause
# license that can be found in the LICENSE file.

load("@{{ if not .Bzlmod }}io_bazel_{{ end }}rules_go//go:def.bzl", {{ if .Binary }}"go_binary", {{ end }}"go_library"{{ if not .NoTests }}, "go_test"{{ end }})

go_library(
    name = "{{ packageName . }}",
    srcs = [{{ range .Files }}
        "{{ . }}",{{ end }}
    ],{{ if or .Embed .EmbedGlobs }}
    embedsrcs = {{ if .EmbedGlobs }}glob([{{ range .EmbedGlobs }}
        "{{ . }}",{{ end }}
    ]){{ end }}{{ if and .Embed .EmbedGlobs }} + {{ end }}{{ if .Embed }}[{{ range .Embed }}
        "{{ . }}",{{ end }}
    ]{{ end }},{{ end }}
    importpath = "{{ .Name }}",
    tags = [
        "manual",  # Only build when needed as a dependency.
    ],
    visibility = ["//visibility:public"],{{ if .Deps }}
    deps = [{{ range .Deps }}
        "//vendor/{{ . }}",{{ end }}
    ],{{ end }}
){{ if .Binary }}

go_binary(
    name = "{{ binaryName . }}",
    embed = [":{{ packageName . }}"],
    visibility = ["//visibility:public"],{{ if .TestDeps }}
    deps = [{{ range .BinaryDeps }}
        "//vendor/{{ . }}",{{ end }}
    ],{{ end }}
){{ end }}{{ if not .NoTests }}

go_test(
    name = "{{ packageName . }}_test",
    size = "{{ if .TestSize }}{{ .TestSize }}{{ else }}small{{ end }}",
    srcs = [{{ range .TestFiles }}
        "{{ . }}",{{ end }}
    ],
    data = glob(
        ["testdata/**"],
        allow_empty = True,
    ){{ if .TestDataGlobs }} + glob(
        [{{ range .TestDataGlobs }}
            "{{ . }}",{{ end }}
        ],
        allow_empty = True,
    ){{ end }}{{ if .TestData }} + [{{ range .TestData }}
        "{{ . }}",{{ end }}
    ]{{ end }},
    embed = [":{{ packageName . }}"],{{ if .TestEnv }}
    env = { {{- range $k, $v := .TestEnv }}
        {{ printf "%q" $k }}: {{ printf "%q" $v }},{{ end }}
    },{{ end }}{{ if .TestDeps }}
    deps = [{{ range .TestDeps }}
        "//vendor/{{ . }}",{{ end }}
    ],{{ end }}
){{ end }}
